[1mdiff --git a/srcs/RequestParser.cpp b/srcs/RequestParser.cpp[m
[1mindex a6bdc68..ccb790f 100644[m
[1m--- a/srcs/RequestParser.cpp[m
[1m+++ b/srcs/RequestParser.cpp[m
[36m@@ -6,7 +6,7 @@[m
 /*   By: hkubo <hkubo@student.42tokyo.jp>           +#+  +:+       +#+        */[m
 /*                                                +#+#+#+#+#+   +#+           */[m
 /*   Created: 2023/02/26 14:35:39 by hkubo             #+#    #+#             */[m
[31m-/*   Updated: 2023/03/05 17:18:34 by hkubo            ###   ########.fr       */[m
[32m+[m[32m/*   Updated: 2023/03/05 20:42:08 by hkubo            ###   ########.fr       */[m
 /*                                                                            */[m
 /* ************************************************************************** */[m
 [m
[36m@@ -46,6 +46,10 @@[m [mvoid RequestParser::set_is_error_request(bool is_error) { this->is_error_request[m
 [m
 bool RequestParser::get_is_error_request() { return this->is_error_request; }[m
 [m
[32m+[m[32mvoid RequestParser::set_header(const std::map<std::string, std::string> header) { this->header = header; }[m
[32m+[m
[32m+[m[32mconst std::map<std::string, std::string> RequestParser::get_header() { return this->header; }[m
[32m+[m
 int RequestParser::handle_request_method(const std::string token) {[m
     if (token == GET || token == POST || token == DELETE) {[m
         set_request_method(token);[m
[36m@@ -91,6 +95,7 @@[m [mint RequestParser::parse_request_line(std::string line) {[m
                 break;[m
             }[m
         } else {[m
[32m+[m[32m            std::cout << "[ERROR] RequestParser::parse_request_line: The request line is too long" << std::endl;[m
             set_is_error_request(true);[m
         }[m
         line.erase(0, pos + delimiter.length());[m
[36m@@ -107,6 +112,25 @@[m [mint RequestParser::parse_request_line(std::string line) {[m
     return EXIT_SUCCESS;[m
 }[m
 [m
[32m+[m[32mint RequestParser::parse_request_header(std::string line) {[m
[32m+[m[32m    std::string delimiter = ":";[m
[32m+[m[32m    size_t pos = line.find(delimiter);[m
[32m+[m[32m    if (pos != std::string::npos) {[m
[32m+[m[32m        std::string key = line.substr(0, pos);[m
[32m+[m[32m        line.erase(0, pos + delimiter.length());[m
[32m+[m[32m        std::string value = line;[m
[32m+[m[32m        std::map<std::string, std::string> header;[m
[32m+[m[32m        header[key] = value;[m
[32m+[m[32m        set_header(header);[m
[32m+[m[32m        std::cout << "key: " << key << " value: " << value << std::endl;[m
[32m+[m[32m        return EXIT_SUCCESS;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        std::cout << "[ERROR] RequestParser::parse_request_header: The request header is invalid" << std::endl;[m
[32m+[m[32m        // set_is_error_request(true);[m
[32m+[m[32m        return EXIT_FAILURE;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
 int RequestParser::parse_request(const std::string request) {[m
     set_request(request);[m
 [m
[36m@@ -124,7 +148,9 @@[m [mint RequestParser::parse_request(const std::string request) {[m
             }[m
             set_state(REQ_HEADER);[m
         } else if (get_state() == REQ_HEADER) {[m
[31m-            std::cout << REQ_HEADER << std::endl;[m
[32m+[m[32m            if (parse_request_header(line) == EXIT_FAILURE) {[m
[32m+[m[32m                return EXIT_FAILURE;[m
[32m+[m[32m            }[m
         } else if (get_state() == REQ_BODY) {[m
             std::cout << REQ_BODY << std::endl;[m
         } else {[m
[1mdiff --git a/srcs/RequestParser.hpp b/srcs/RequestParser.hpp[m
[1mindex c72405f..a6b6616 100644[m
[1m--- a/srcs/RequestParser.hpp[m
[1m+++ b/srcs/RequestParser.hpp[m
[36m@@ -6,7 +6,7 @@[m
 /*   By: hkubo <hkubo@student.42tokyo.jp>           +#+  +:+       +#+        */[m
 /*                                                +#+#+#+#+#+   +#+           */[m
 /*   Created: 2023/02/26 14:35:39 by hkubo             #+#    #+#             */[m
[31m-/*   Updated: 2023/03/05 17:02:20 by hkubo            ###   ########.fr       */[m
[32m+[m[32m/*   Updated: 2023/03/05 17:48:39 by hkubo            ###   ########.fr       */[m
 /*                                                                            */[m
 /* ************************************************************************** */[m
 [m
[36m@@ -47,12 +47,16 @@[m [mclass RequestParser {[m
     std::string get_request();[m
     void set_is_error_request(bool is_error);[m
     bool get_is_error_request();[m
[31m-    int parse_request(const std::string request);[m
[31m-    int parse_request_line(const std::string line);[m
[32m+[m[32m    void set_header(const std::map<std::string, std::string> header);[m
[32m+[m[32m    const std::map<std::string, std::string> get_header();[m
[32m+[m
     int handle_request_method(const std::string token);[m
     int handle_target_uri(const std::string token);[m
     int handle_http_version(const std::string token);[m
 [m
[32m+[m[32m    int parse_request(const std::string request);[m
[32m+[m[32m    int parse_request_line(std::string line);[m
[32m+[m[32m    int parse_request_header(std::string line);[m
 [m
 [m
    private:[m
